import dependencies.Dep
import dependencies.Versions

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion Versions.androidCompileSdkVersion
    buildToolsVersion Versions.androidBuildToolsVersion

    defaultConfig {
        applicationId "jp.co.vegeta.fit"
        minSdkVersion Versions.androidMinSdkVersion
        targetSdkVersion Versions.androidTargetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding true
    }

    lintOptions {
        abortOnError false
        checkDependencies true
        ignoreTestSources true

        disable 'ContentDescription'
    }
    packagingOptions {
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
        // 以下の問題回避のために除外している
        // https://github.com/Kotlin/kotlinx.coroutines/issues/2023
        exclude "**/attach_hotspot_windows.dll"
        exclude "META-INF/licenses/ASM"

        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/LICENSE-notice.md'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
        exclude("META-INF/*.kotlin_module")
    }
}

dependencies {

    implementation project(":feature:startup")
    implementation project(":feature:model")
    implementation project(":feature:repository")
    implementation project(":feature:core")

    // Mapbox
    implementation Dep.Mapbox.mapbox

    // Google
    implementation Dep.Google.playService
    implementation Dep.Google.playServiceVision

    // Permission Dispatcher
    implementation Dep.PermissionsDispatcher.permissionsDispatcher
    kapt Dep.PermissionsDispatcher.processor

    // Groupie
    implementation Dep.Groupie.groupie
    implementation Dep.Groupie.groupieDatabinding
    implementation Dep.Groupie.groupieViewbinding
    // Core
    implementation Dep.Kotlin.stdlibJvm
    implementation Dep.AndroidX.coreKtx
    implementation Dep.AndroidX.appCompat
    implementation Dep.AndroidX.design
    implementation Dep.AndroidX.constraint
    implementation Dep.AndroidX.gridLayout


    implementation Dep.AndroidX.lifecycleExtensions
    implementation Dep.AndroidX.lifecycleLiveDataKtx
    implementation Dep.AndroidX.lifecycleViewModelKtx
    implementation Dep.AndroidX.lifecycleRuntimeKtx

    // Navigation
    implementation Dep.AndroidX.Navigation.common
    implementation Dep.AndroidX.Navigation.commonKtx
    implementation Dep.AndroidX.Navigation.fragment
    implementation Dep.AndroidX.Navigation.fragmentKtx
    implementation Dep.AndroidX.Navigation.ui
    implementation Dep.AndroidX.Navigation.uiKtx
    implementation Dep.AndroidX.Navigation.runtime
    implementation Dep.AndroidX.Navigation.runtimeKtx

    // Hilt-Dagger
    implementation Dep.Dagger.hilt
    implementation Dep.Dagger.hiltViewModel
    kapt Dep.Dagger.hiltAndroidCompiler
    kapt Dep.Dagger.hiltCompiler

    implementation Dep.RxJava.core
    implementation Dep.RxJava.android
    implementation Dep.RxJava.kotlin
    implementation Dep.RxJava.replay
    implementation Dep.RxJava.replayingShareKotlin

    // Other
    implementation Dep.timber
    implementation Dep.Mot.map
    implementation Dep.Mot.navi
    implementation Dep.Mot.naviFlow
    implementation Dep.Mot.globalNavi

    // Test
    testImplementation Dep.Test.JUnit.junit4
    testImplementation Dep.Test.JUnit.api
    testRuntimeOnly Dep.Test.JUnit.engine
    testImplementation Dep.Test.JUnit.params
    testImplementation Dep.Test.Mock.mockk
    testImplementation Dep.Test.Mock.assertk
    testImplementation Dep.Test.Mock.mockkAndroid
    testImplementation Dep.Test.Spek.dsl
    testImplementation Dep.Test.Spek.runner
}
kapt {
    correctErrorTypes true
}